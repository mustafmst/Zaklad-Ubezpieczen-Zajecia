/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import entities.*;
import java.awt.HeadlessException;
import java.sql.Time;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import model.*;
/**
 *
 * @author DR
 */
public class AddAppointmentJFrame extends javax.swing.JFrame {

    private int day;
    private int month;
    private int year;
    
    private Date date;
    private Time hour = new Time(00,00,00);
    
     private final UserModel user = new UserModel();
     private final CustomerModel customerModel = new CustomerModel();
     private final AppointmentModel appointmentModel = new AppointmentModel();
     List<User> wynik = new ArrayList<User>();
     //private Vector<Integer> advisors = new Vector<Integer>();
     private Integer[] advisors;
    /**
     * Creates new form AddAppointmentJFrame
     */
    public AddAppointmentJFrame() {
        initComponents();
        addItem();
    }
    
    public AddAppointmentJFrame(int dd, int mm, int yy) {
        super();
        initComponents();
        this.day = dd;
        this.month = mm;
        this.year = yy;

        date = new Date(yy-1900,mm-1,dd);
        System.out.println(date);
        addItem();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldPesel = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxHours = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxAdvisor = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButtonAddNewAppointment = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Pesel");

        jLabel2.setText("Hour");

        jComboBoxHours.setModel(new javax.swing.DefaultComboBoxModel(new String[] {"8:00:00","9:00:00","10:00:00","11:00:00","12:00:00","13:00:00","14:00:00" }));

        jLabel3.setText("Advisor");

        jComboBoxAdvisor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButtonAddNewAppointment.setText("Add");
        jButtonAddNewAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddNewAppointmentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldPesel)
                            .addComponent(jComboBoxHours, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxAdvisor, 0, 113, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                        .addComponent(jButtonAddNewAppointment)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPesel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxHours, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxAdvisor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAddNewAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public final void addItem(){
        DefaultComboBoxModel model = (DefaultComboBoxModel) this.jComboBoxAdvisor.getModel();
//        model.setValueAt("pesel_1", 2, 3);
        wynik = this.user.findId_advisors();
        advisors = new Integer[wynik.size()];
        int i = 0;
        for(User A : wynik){
            advisors[i] = A.getUserId();
            i++;
            model.addElement(A.getImie()+" "+A.getNazwisko());
        }
    }
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonAddNewAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddNewAppointmentActionPerformed
        // TODO add your handling code here:
        try {
            Customer foundCustomer = null;
            
            Appointment appointment = new Appointment();
            String pesel = this.jTextFieldPesel.getText();
            hour.setHours(this.jComboBoxHours.getSelectedIndex()+8);
            
            String showInputDialog = null;
            boolean isFill = true;

            if (pesel.isEmpty()) {
                showInputDialog = " Pesel";
                isFill = false;
            } 
            
            if (isFill != false) {
                appointment.setPesel(pesel);
                appointment.setId_advisor(advisors[this.jComboBoxAdvisor.getSelectedIndex()]);
                appointment.setDateofAddAppointment(date);
                appointment.setHours(hour);
                foundCustomer = this.customerModel.find(pesel);
            }

            if (isFill == false) {
                JOptionPane.showMessageDialog(null, "Fill field: " + showInputDialog);
            } else if (foundCustomer != null) {
                Appointment foundAppointment = this.appointmentModel.findAppointmentPesel(date, pesel);
                
                if (foundAppointment == null) {
                    try {

                    this.appointmentModel.create(appointment);
                    JOptionPane.showMessageDialog(null, "Add new appointment successful");
                    dispose();
                    } catch (NumberFormatException | HeadlessException e) {
                        JOptionPane.showMessageDialog(null, e.getMessage());
                    }
                } else{
                    JOptionPane.showMessageDialog(null, "The customer already has a visit for the day!!!", "Warning!", JOptionPane.INFORMATION_MESSAGE);
                }
                //dispose();
            } else {
                JOptionPane.showMessageDialog(null, "No such customer in the database!!!", "Warning!", JOptionPane.INFORMATION_MESSAGE);
                //dispose();
            }
            
        } catch (NumberFormatException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_jButtonAddNewAppointmentActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddAppointmentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddAppointmentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddAppointmentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddAppointmentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddAppointmentJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAddNewAppointment;
    private javax.swing.JComboBox jComboBoxAdvisor;
    private javax.swing.JComboBox jComboBoxHours;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextFieldPesel;
    // End of variables declaration//GEN-END:variables
}
